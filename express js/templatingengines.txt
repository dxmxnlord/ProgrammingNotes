+ A template engine enables you to use static template files in your application. At runtime, the template engine replaces variables in a template file with actual values, and transforms the template into an HTML file sent to the client. This approach makes it easier to design an HTML page.

+ Some popular template engines that work with Express are Pug, Mustache, and EJS. 

+ To render template files, set the following application setting properties, set in app.js in the default app created by the generator:

	++ views, the directory where the template files are located. Eg: app.set('views', './views'). This defaults to the views directory in the application root directory.

	++ view engine, the template engine to use. For example, to use the Pug template engine: app.set('view engine', 'pug').

// set up the view engine (ref docs)

[[
	Create a Pug template file named index.pug in the views directory, with the following content:

	html
	  head
	    title= title
	  body
	    h1= message
	Then create a route to render the index.pug file. If the view engine property is not set, you must specify the extension of the view file. Otherwise, you can omit it.

	app.get('/', function (req, res) {
	  res.render('index', { title: 'Hey', message: 'Hello there!' })
	})
	When you make a request to the home page, the index.pug file will be rendered as HTML.
]]

refer : https://medium.com/@bloomaman/rendering-views-with-node-express-and-ejs-415af1493c74